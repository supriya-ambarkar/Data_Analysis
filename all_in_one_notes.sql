create table employee(EMP_ID INTEGER,EMP_NAME VARCHAR(20),SALARY INT);
INSERT INTO employee VALUES(101,'SUPRIYA',20000);
INSERT INTO employee VALUES(102,'SHABARISH',3000);
SELECT * FROM EMPLOYEE;
DESCRIBE table employee;

SELECT * FROM "SAMPLE_DATABASE"."PUBLIC"."EMPLOYEE";"SAMPLE_DATABASE"."PUBLIC";

--------------------------------------------------------------------------


CREATE or replace table NJ_CONSUMER_COMPLAINTS
(    DATE_RECEIVED STRING,
     PRODUCT_NAME VARCHAR2(50),
     SUB_PRODUCT VARCHAR2(100),
     ISSUE VARCHAR2(100),
     SUB_ISSUE VARCHAR2(100),
     CONSUMER_COMPLAINT_NARRATIVE string,
     Company_Public_Response STRING,
     Company VARCHAR(100),
     State_Name CHAR(4),
     Zip_Code string,
     Tags VARCHAR(40),
     Consumer_Consent_Provided CHAR(25),
     Submitted_via STRING,
     Date_Sent_to_Company STRING,
     Company_Response_to_Consumer VARCHAR(40),
     Timely_Response CHAR(4),
     CONSUMER_DISPUTED CHAR(4),
     COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

SELECT * FROM NJ_CONSUMER_COMPLAINTS;

DESCRIBE TABLE NJ_CONSUMER_COMPLAINTS;

---------------------------------------------------------------------

CREATE OR REPLACE TABLE COUNTRIES (COUNTRYID INTEGER, 
                                   COUNTRYNAME VARCHAR(20), 
                                   COUNTRYNAME_LOCAL VARCHAR(20),
                                   COUNTRYFLAGURL VARCHAR(100));
                                   
SELECT * FROM  COUNTRIES;

---------------------------------------------------------------------------

CREATE or REPLACE TABLE NY_PROPERTY_SALES(
 ID INTEGER, 
 AREA VARCHAR(100), 
 NEIGHBORHOOD VARCHAR(100),
 BuildingClassCategory VARCHAR (100),
 ADDRESS VARCHAR (100),
 ZIPCode INTEGER, 
 LandSquareFeet VARCHAR(50),
 GrossSquareFeet VARCHAR(50), 
 YearBuilt INTEGER, 
 SalesDate VARCHAR(20), 
 SalesPrice VARCHAR(50));
 
 DESCRIBE TABLE NY_PROPERTY_SALES;
 SELECT * FROM NY_PROPERTY_SALES;
 

----------------------------------------------------------------------------------



CREATE OR REPLACE TABLE KEYSALESDATA
(CLIENTID INTEGER,
CLIENTNAME VARCHAR (100),
ADDRESS1 STRING, 
ADDRESS2 STRING,
TOWN STRING, 
COUNTY STRING,
POSTCODE STRING,
POSTCODE2 VARCHAR (100),
OUTERPOSTODE VARCHAR (100), 
COUNTRYID INTEGER,
CLIENTTYPE VARCHAR (100), 
CLIENTSIZE VARCHAR (100),
CLIENTSINCE VARCHAR (100), 
ISCREDITWORTHY INTEGER,
ISDEALER INTEGER);

SELECT * FROM KEYSALESDATA;
                   
DESCRIBE TABLE KEYSALESDATA;

---------------------------------------------------

CREATE OR REPLACE TABLE STORE_CITIES
(STORE_ID VARCHAR (100),
STORETYPE_ID VARCHAR (100), 
STORE_SIZE VARCHAR (100),
CITY_ID VARCHAR (100), 
state_state_abr_city VARCHAR (100), 
lat_Long VARCHAR(100));

SELECT * FROM STORE_CITIES;

------------------------------------------------------
------------------------------------------------------

--27-11-22

USE DATABASE SAMPLE_DATABASE;

SELECT CURRENT_DATE; --GET CURRENT DATE

SELECT CURRENT_TIMESTAMP; --GET CURRENT TIME --2022-11-27 02:09:57.649 -0800

--SNOWFLAKE IT DEPENDS ON THE TIEM ZONE THAT WE ARE 


SELECT CURRENT_TIME; --02:07:59

SELECT CONVERT_TIMEZONE('GMT',CURRENT_TIMESTAMP) AS GMT_TIMEZONE;

------------------------------------------------------

--BY USING DATE_TRUNC WE CAN GET ALL DATE MONTH AND YEAR AS THE FORMAT OF YYYY-MM-DD

SELECT DATE_TRUNC('YEAR',CURRENT_DATE) AS YEAR_FROM_DATE; --2022-01-01

SELECT DATE_TRUNC('MONTH',CURRENT_DATE) AS MONTH_FROM_DATE; --2022-11-01

SELECT DATE_TRUNC('DAY',CURRENT_DATE) AS DAY_FROM_DATE; -- GET THE DATE 2022-11-27

SELECT TO_DATE('2020-11-14') AS FAV_DATE; --TO_DATE function is used to convert the string into date format

SELECT DATE_TRUNC('DAY',TO_DATE('2020-11-14')) AS DAY_FROM_DATE;

SELECT DATE_TRUNC('WEEK',DATE('2022-11-27')) AS WEEK_DATE_FROM_DATE; --FOR WEEK ANALYSIS-- IT TAKES THE PERVIOUS MONDAYS DATE

---------------------------------------------------------------

SELECT DAY(CURRENT_TIMESTAMP()),
MONTH(CURRENT_TIMESTAMP()),
HOUR(CURRENT_TIMESTAMP()),
MINUTE(CURRENT_TIMESTAMP()),
SECOND(CURRENT_TIMESTAMP());

SELECT WEEK(CURRENT_DATE) AS WEEK_FROM_START_OF_THE_YEAR;

SELECT MONTH(CURRENT_DATE) AS MONTH_FROM_START_OF_THE_YEAR;

SELECT DAY(CURRENT_DATE) AS DAY_FROM_START_OF_THE_YEAR;

SELECT DAY(DATE('2022-11-14')) AS WEEK_FROM_START_OF_THE_YEAR;

-------------------------------------------------------

--GET LAST DAY OF PASSED MONTH

SELECT LAST_DAY(DATE('2022-11-14')) AS LAST_DAY_OF_GIVEN_MONTH;
-----------------------------------------------------------------------

--INTERVALS 

SELECT DATE(DATE('2022-11-17')-INTERVAL '5 day') AS FIVE_dAY_BACK_DATE;

SELECT DATE(DATE('2022-11-17')-INTERVAL '2 MONTH') AS TWO_dAY_BACK_DATE;

SELECT DATE(DATE('2022-11-17')-INTERVAL '2 WEEK') AS TWO_WEEK_BACK_DATE;

---------------------------------------------------------------------

--12 MONTHS = QUATER = 12/4 = 3 SO JAN,FEB,MAR= 1 QUATER

SELECT QUARTER(CURRENT_DATE) AS QTR;

-------------------------------------------------------------------

--BY USING EXTRACT WE GET ONLY WHAT WE HAVE SPECIFIED EITHER IT MAY BE DAY,MONTH OR YEAR.
SELECT EXTRACT(YEAR FROM CURRENT_DATE) AS YEAR;
SELECT EXTRACT(MONTH FROM CURRENT_DATE) AS MONTH;
SELECT EXTRACT(DAY FROM CURRENT_DATE) AS DAY;

-----------------------------------------------------

--WE CAN CHANGE FORMAT AS PER THE REQUIREMENTS

SELECT TO_CHAR(TO_DATE('1993-10-12'),'DD-MM-YYYY') AS DATE_DD_MM_YYYY;--HIGHLY USED

SELECT TO_CHAR(TO_DATE(CURRENT_DATE),'DD-MM-YYYY') AS DATE_DD_MM_YYYY;

SELECT TO_CHAR(TO_DATE(CURRENT_DATE),'DY-DD-MM-YYYY') AS DATE_DD_MM_YYYY;

SELECT TO_CHAR(TO_DATE('1993-10-12'),'MM-YYYY') AS MONTH_MM_YYYY;

SELECT TO_CHAR(TO_DATE('1993-10-12'),'DD-YYYY') AS DAY_MM_YYYY;

SELECT TO_CHAR(TO_DATE('1993-10-12'),'DY') AS DATE_DD_MM_YYYY; -- DISPLAYS THE DAY 

------------------------------------------------------------------

SELECT DATEDIFF('MONTH','2022-06-01','2021-08-21');

SELECT DATEDIFF('MONTH','2020-11-14','2022-11-27') AS DIFFERENCE_IN_MONTHS;

SELECT DATEDIFF('DAYS','2020-11-14','2022-11-27') AS DIFFERENCE_IN_DAYS;

SELECT DATEDIFF('WEEK','2020-11-14','2022-11-27') AS DIFFERENCE_IN_WEEKS;

SELECT DATEDIFF('MINUTES','2020-11-14','2022-11-27') AS DIFFERENCE_IN_MINUTES;

SELECT DATEDIFF('SECOND','2020-11-14','2022-11-27') AS DIFFERENCE_IN_SECONDS;



------------------------------------------------------------------------------------
--03-12-2022

--TO SELECT THE UNIQUE ELEMENTS FROM TABLE WE USE DISTINCT KEYWORD

SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS;

SELECT DISTINCT PRODUCT_NAME FROM NJ_CONSUMER_COMPLAINTS;

SELECT DISTINCT ISSUE FROM NJ_CONSUMER_COMPLAINTS;


--LIKE KEYWORD:

SELECT DISTINCT * FROM NJ_CONSUMER_COMPLAINTS 
WHERE SUB_PRODUCT LIKE 'Checking%';

SELECT DISTINCT SUB_PRODUCT FROM NJ_CONSUMER_COMPLAINTS 
WHERE SUB_PRODUCT LIKE 'Check%';

create or replace table like_ex(subject varchar(20));
insert into like_ex values
    ('John  Dddoe'),
    ('Joe   Doe'),
    ('John_down'),
    ('Joe down'),
    ('Elaine'),
    (''),    -- empty string
    (null);

SELECT * FROM like_ex;
select subject from like_ex where subject like '%Jo%oe%' ;
--order by subject;

----------------------------------------------------
--04-dec-2022
/*
referral, postal mail,email - ouutbound
phone,web - inbound
fax - electronics


USE DATABASE SAMPLE_DATABASE;

SELECT * FROM NJ_CONSUMER_COMPLAINTS;
DESCRIBE TABLE NJ_CONSUMER_COMPLAINTS;

 


SELECT DATE_RECEIVED, PRODUCT_NAME ,SUB_PRODUCT,ISSUE,
        CASE WHEN SUBMITTED_VIA IN ('Referral','Postal Mail','Email') THEN 'Outbound'
             WHEN SUBMITTED_VIA IN ('Phone','Web') THEN 'Inbound'
             ELSE 'Electronics'
         END AS Submission_Type,
         
         COMPANY,STATE_NAME,ZIP_CODE
         
FROM NJ_CONSUMER_COMPLAINTS;



SELECT DATE_RECEIVED, PRODUCT_NAME ,SUB_PRODUCT,ISSUE,
CASE
    WHERE UPPER(PRODUCT_NAME) LIKE '%Loan' THEN 'LOAN'
    WHERE UPPER(PRODUCT_NAME) IN ('BANK ACCOUNT OR SERVICE','DEBT COLECTION') AS 'SERVICE'
    ELSE 'OTHER'
    
END AS FINANCE_TYPE

FROM NJ_CONSUMER_COMPLAINTS;


SELECT *,
CASE
    WHEN SUB_PRODUCT = 'I DO NOT KNOW' OR SUB_PRODUCT IS NULL THEN 'NA'
    WHEN UPPER(SUB_PRODUCT) LIKE(%CARD) THEN 'CARD'
    WHEN UPPER(SUB_PRODUCT) LIKE(%LOAN) THEN 'LOAN'
    WHEN UPPER(SUB_PRODUCT) LIKE(%MORTGAGE) THEN 'MORTGAGE'
    ELSE SUB_PRODUCT
END AS SUB_PRODUCT_TYPE;




FROM AJ_CONSUMER_COMPLAINTS;


--CREATINNG A NEW VIEW IN ORDER TO SEN D TO CLIENT...

CREATE OR REPLACE VIEW AJ_CONSUMER_RESPONSE AS
SELECT DATE_RECIEVED,PRODUCT_NAME  --WRITE COLUMN NAMES
  CASE
      WHERE SUBMITTED_VIA IN  ('REFERREL' OR 'POSTAL MAIL' OR 'EMAIL') THEN 'OUTBOUND'
      WHERE SUBMIOTTED_VIS IN('PHONE' OR 'WEB' ) THEN 'INBOUND'
      ELSE ELECTRONIC
  END  AS SUBMISSION_TYPE,

    CASE
      WHEN UPPER(COMPANY_RESPONSE_TO_CONSUMER) ='CLOSED WITH EXPLANATION' THEN 'EXPLAINED'
      WHEN UPPER(COMPANY_RESPONSE_TO_CONSUMER) ='CLOSED WITH MONETARY RELIEF' THEN 'MONETORY '
      WHEN UPPER(COMPANY_RESPONSE_TO_CONSUMER) = 'CLOSED' OR 'CLOSED WITH NON MONETARY RELIEF' THEN 'CLOSED'
      ELSE COMPANY_RESPONSE_TO_CONSUMER
    END AS NEW_COMPANY_RESPONSE,

    SELECT *,
    CASE
        WHERE UPPER(PRODUCT_NAME) LIKE '%Loan' THEN 'LOAN'
        WHERE UPPER(PRODUCT_NAME) IN ('BANK ACCOUNT OR SERVICE','DEBT COLECTION') AS 'SERVICE'
        ELSE 'OTHER'

    END AS FINANCE_TYPE,
    
    
    SELECT *,
    CASE
        WHEN SUB_PRODUCT = 'I DO NOT KNOW' OR SUB_PRODUCT IS NULL THEN 'NA'
        WHEN UPPER(SUB_PRODUCT) LIKE(%CARD) THEN 'CARD'
        WHEN UPPER(SUB_PRODUCT) LIKE(%LOAN) THEN 'LOAN'
        WHEN UPPER(SUB_PRODUCT) LIKE(%MORTGAGE) THEN 'MORTGAGE'
        ELSE SUB_PRODUCT
    END AS SUB_PRODUCT_TYPE

    FROM AJ_CONSUMER_COMPLAINTS;
    
 SELECT * FROM AJ_CONSUMER_RESPONSE; --NEW VIEW CREATED ONE
 
 */
 